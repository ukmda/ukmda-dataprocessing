# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# repo-specific exclusions
PCB/
*.state

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
.vscode/settings.json

UKMonCPPTools/Encryptor

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.o
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
*.exe

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
#coverage*[.json, .xml, .info]

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd
ananalysis/test_data/platepar/skyFit_latest.state
ananalysis/test_data/platepar/skyFit_latest.state
DailyChecks/UK000F.ini
DailyChecks/tackley_tc.ini
DailyChecks/UK0006.ini
DailyChecks/tackley_ne.ini
/UKMonCPPTools/TestPutFile
M*.jpg
M*.xml
# don't want to duplicate this into github
live/old_curate/numpy/**
live/old_curate/pytz/**
live/old_curate/numpy.libs/**
live/old_curate/UFOHandler/*
live/old_curate/curateEngine*
notshared/**
analysis/test_data/platepar/platepar_cmn2010_ne.cal
analysis/test_data/platepar/skyFit_latest.state
ukmon-live/getlogs/.ukmoncreds
*.retry
*.bkp
*.rtf
*/deploy*.ps1
UKMonCPPTools/stacker/test/*
analysis/deployToAWS.yml
*.zip
analysis/*.png
analysis/*.pickle
analysis/*.txt
mp4s
StandaloneCurator/.installed
analysis/orbitSolver/testing
analysis/FormatConverters/testing
*/test_data/*
archive/samfunctions*/pytz*
archive/static_content/data/searchdialog.js
ToDo*
archive/costs/**/*.csv
archive/costs/**/*.json
archive/costs/plots/*.png
archive/samfunctions*/.aws-sam/build.toml
archive/costs/S3-size-empireelements.xlsx
archive/ukmon_pylib/share/maps/BM*.jpg
archive/ukmon_pylib/share/maps/BM*.png
archive/ukmon_pylib/share/maps/pop*.jpg
archive/unused/**
**/build.toml
**/.terraform.lock.hcl
**/terraform.tfstate
**/terraform.tfstate.backup
**/test/*.csv
**/test/*.kml
**/test/*.txt
**/test/*.png
**/test/*.html
**/test/*.lst
ukmon_pylib/tests/20220217_032206.832_UK/*
unused/*
*tfstate.lock.info
archive/samfunctions*/getExtraFilesV2/pythoncode/WesternMeteorPyLib/*
archive/samfunctions*/getExtraFilesForEE/pythoncode/WesternMeteorPyLib/*
archive/containers/trajsolver/WesternMeteorPyLib/*
archive/containers/trajsolver/awskeys
archive/containers/trajsolvertest/WesternMeteorPyLib/*
archive/containers/trajsolvertest/awskeys
#ukmon_pylib/traj/clusdetails.txt
**/*.pickle
archive/containers/gui/awskeys
archive/terraform/*/ukmonreadonly.key
.cache_ggshield
replacements.txt
archive/samfunctions*/apis-mm.txt
archive/samfunctions*/apis-ee.txt
usermgmt/windows/createUserKeyAWS.ps1
archive/samfunctions*/matchPickle/pythoncode/WesternMeteorPyLib/**
archive/samfunctions*/matchPickle/pythoncode/*.npy
.terraform/
archive/utils/tmp.json
usermgmt/windows/caminfo/camera-details-new.csv
ukmon_pylib/tests/testFilter/FTP*new.txt
ukmon_pylib/tests/MaxCams/**/*.old
ukmon_pylib/tests/MaxCams/*.png
ukmon_pylib/tests/MaxCams/trajectories/**
ukmon_pylib/tests/MaxCams/limit6/**
ukmon_pylib/tests/MaxCams/nolimit/**
ukmon_pylib/tests/MaxCams/processed_trajectories.json
ukmon_pylib/tests/usertools/2021-07-17T02_41_05_05_M001.ecsv
ukmon_pylib/tests/usertools/2021-07-17T02_41_05_05_M003.ecsv
ukmon_pylib/tests/usertools/2021-07-17T02_41_05_05_M002.ecsv
ukmon_pylib/tests/usertools/2021-07-17T02_41_05_05_M004.ecsv
ukmon_pylib/tests/usertools/20230202_014115.kml
archive/containers*/simpleUI/awskeys
archive/samfunctions*/camDetails/pythoncode/camDetails.py
archive/samfunctions*/camDetails/pythoncode/awskeys
archive/containers/RMS-docker/rms_docker.tar
archive/containers/RMS-docker/Dockerfile_orig.txt

usermgmt/windows/csvkeys
usermgmt/windows/inifs
usermgmt/windows/jsonkeys
usermgmt/windows/keys
usermgmt/windows/sshkeys
usermgmt/windows/stationdetails
usermgmt/windows/users
usermgmt/gmailkeys/*
usermgmt/server/ukmonfundraising.txt
usermgmt/server/ukmoncommittee.txt
usermgmt/server/ukmon*.json

**/awskeys.test
**/trajsolver_old/*
archive/tmp/*
servercopy/files/*
tests/testing/RMS/
tests/testing/WesternMeteorPyLib/
archive/ukmon_pylib/tests/testdata.tar.gz
servercopybkp/*
